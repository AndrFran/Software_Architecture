Переваги  Test Cases:

Test Cases можна довірити виконувати новачкові або покликаному на допомогу колезі з іншого відділу, який нічогісінько про проект не знає. Додаткових питань з його боку буде по мінімуму – все так і має бути, зрозуміло.

Недоліки Test Cases (випливають один з іншого):

Дуже багато копіпаст, багато копіпаст, копіпаст. Test Cases “ввести в поле тільки символи, тільки числа, рядок нульової довжини і т. д.” будуть дуже схожі один на одного, перші кроки однакові і, поклавши руку на серце, будуть копіпаст. Спробуйте написати хоча б три Test Cases на один функціонал і відразу побачите цю проблему.
Складно підтримувати. Уявіть, що вкладку “Мешканці” перейменували в “Замовники”. Щоб актуалізувати Test Cases, треба внести зміни в сотні сценаріїв, що утомливо навіть в режимі “Ctrl + C, Ctrl + V”.
Неактуальний стан. Test Cases часто створюють в режимі “копіпаст” один від одного, і часто в них залишаються неактуальні частини з вихідного кейса, які забули змінити.
Останній недолік перекреслює гідності.  Тестувальник, який вже рік як працює на проекті, зрозуміє де неактуальний кейс, тим більше якщо виконує їх поспіль, починаючи з першого. А тестувальник, який нічого про проект не знає і отримав пару кейсів з середини тестового набору, не зможе зрозуміти, про що в них йдеться.

Щоб тест-кейси чесно виконували свою роль, їх треба підтримувати, періодично перевіряти на правильність і допрацьовувати .Це забирає дуже багато часу і сил.

Щоб спростити цей процес, можуть бути використані тест-кейси з одним сценарієм виконання, але декількома вхідними параметрами і різними очікуваними результатами. Фактично ми отримуємо міні чек-листи з попередніми кроками.

Створення Test Cases – досить складний процес, який вимагає не тільки грунтовного поглиблення в проект, а й певних навичок. І тому тест-дизайнери, в чию компетенцію входить ця робота, повинні:

– налагоджувати ефективну комунікацію з розробниками, менеджерами і користувачами для збору даних по проекту і проведення QA-аналізу;

– правильно розставляти пріоритети, відокремлювати важливіше від менш значущого;

– однаково легко бачити систему в цілому і проводити декомпозицію, щоб була перевірена кожна окрема фіча;

– точно формулювати думки і вміти їх донести до колег і замовника;

– вміло застосовувати техніки тест-дизайну.

Спосіб опису тест кейсів і їх структура можуть бути різними в кожній компанії або команді: мати різні глибини опису необхідних дій і результатів, мати різні структурні складові. Але, добра структурованість і висока зручність шаблонів тестових випадків, може досить скоротити час рутинних заповнень форм і підвищити ефективність команди в цілому.
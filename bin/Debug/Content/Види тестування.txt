Класифікація за ознаками
За ступенем автоматизації:

Ручне тестування (manual testing)
Автоматизоване тестування (automated testing)
Напівавтоматизоване тестування (semiautomated testing)
За ступенем підготовленості до тестування:

Тестування по документації (formal testing)
Тестування ad hoc або інтуїтивне тестування (ad hoc testing) — тестування без тест плану та документації, що базується на методиці передбачення помилки на власному досвіді тестувальника.
За знанням системи:

Тестування чорного ящика (black box)
Тестування білого ящика (white box)
Тестування сірого ящика (grey box)
За ступенем ізольованості компонентів:

Компонентне (модульне) тестування (component/unit testing)
Інтеграційне тестування (integration testing)
Системне тестування (system/end-to-end testing)
За часом проведення тестування:

Альфа-тестування (alpha testing)
Тестування при прийманні або Димове тестування (smoke testing)
Тестування нової функціональності (new feature testing)
Регресивне тестування (regression testing)
Тестування при здачі (acceptance testing)
Бета-тестування (beta testing)
За об'єктом тестування:

Функціональне тестування (functional testing)
Тестування продуктивності (performance testing)
Навантажувальне тестування (load testing)
Стрес-тестування (stress testing)
Тестування стабільності (stability/endurance/soak testing)
Тестування зручності використання або Юзабіліті-тестування (usability testing)
Тестування інтерфейсу користувача (UI testing)
Тестування безпеки (security testing)
Тестування локалізації (localization testing)
Тестування сумісності (compatibility testing)
За ознакою позитивності сценаріїв:

Позитивне тестування (positive testing)
Негативне тестування (negative testing)
Опис видів тестування
Інсталяційне тестування
Інсталяційне тестування запевняє, що система встановлена ??правильно і коректно працює на апаратному забезпеченні конкретного клієнта.

Тестування сумісності
Основною метою якого є перевірка коректної роботи продукту в певному середовищі. Середовище може включати в себе наступні елементи:

Апаратна платформа
Мережеві пристрої
Периферія (принтери, CD/DVD-приводи, веб-камери та ін.);
Операційна система (Unix, Windows, MacOS, …)
Бази даних (Oracle, MS SQL, MySQL, …)
Системне програмне забезпечення (веб-сервер, фаєрвол, антивірус, …)
Браузери (Internet Explorer, Firefox, Opera, Chrome, Safari)
Смоук тестування (Smoke testing)
Мінімальний набір тестів на явні помилки. Цей тест зазвичай виконується самим програмістом. Програму, що не пройшла такий тест, не має сенсу передавати на глибше тестування.

Регресивне тестування
Виявляє помилки у вже протестованих ділянках початкового коду. Такі помилки — коли після внесення змін до програми перестає працювати те, що мало б працювати, — називають регресивними помилками.

Регресивне тестування (за деякими джерелами) включає:

new bug-fix — перевірка виправлення знайдених дефектів;
old bug-fix — перевірка, що виявлені раніше й виправлені дефекти не відтворюються в системі знову;
side-effect — перевірка того, що не порушилася працездатність працюючої раніше функціональності, якщо її код міг бути зачеплений під час виправлення деяких дефектів в іншій функціональності.
Функціональне тестування
Докладніше у статті Функціональне тестування
Перевіряє, чи реалізовані функціональні вимоги, тобто можливості ПЗ в певних умовах вирішувати завдання, потрібні користувачам. Функціональні вимоги визначають, що саме робить продукт, які завдання вирішує.

Функціональні вимоги включають в себе:

Функціональна придатність
Точність
Можливість до взаємодії
Відповідність стандартам та правилам
Захищеність
Нефункціональне тестування
Описує тести, необхідні для визначення характеристик ПЗ, які можуть бути виміряні різними величинами. В цілому, це тестування того, «як» система працює. Далі перелічені основні види нефункціональних тестів:

Всі види тестування продуктивності:
навантажувальне тестування
стресове тестування
тестування стабільності та надійності
об'ємне тестування
Інсталяційне тестування
Тестування зручності користування
Тестування на «відмову» та відновлення
Конфігураційне тестування
Деструктивне тестування
Докладніше у статті Деструктивне тестування
Намагається привести ПЗ чи підсистему до збою. Воно перевіряє, чи ПЗ продовжує функціонувати навіть при отриманні неправильних або неочікуваних вхідних даних, встановлюючи тим самим надійність перевірки вхідних даних і управління помилками підпрограм.

Тестування швидкодії
Проводиться з метою встановлення, як швидко працює система або її частина, під певним навантаженням. Також може слугувати для перевірки й підтвердження інших атрибутів якості системи, таких як масштабування, надійність та використання ресурсів.

В тестуванні швидкодії виділяють такі напрямки:

навантажувальне
стрес
тестування стабільності
конфігураційне
Тестування зручності використання
Виконується з метою визначення зручності використання ПЗ для його подальшого застосування. Це метод оцінки зручності продукту у використанні, заснований на залученні користувачів як тестувальників, випробувачів і підсумовуванні отриманих від них висновків.